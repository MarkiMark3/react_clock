{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","hasClock","timerId","addSeconds","handleRightClick","event","preventDefault","setState","clickHandle","this","window","setInterval","console","info","toUTCString","slice","document","addEventListener","prevProps","prevState","clockName","props","debug","clearInterval","removeEventListener","className","React","PureComponent","getRandomName","value","now","toString","App","timerNameId","ReactDOM","render","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,KACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,EAQEC,WAAa,EARf,EA0CEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKC,SAAS,CAAEN,UAAU,KA5C9B,EA+CEO,YAAc,WACZ,EAAKD,SAAS,CAAEN,UAAU,KAhD9B,uDAUE,WAA2B,IAAD,OACxBQ,KAAKF,SAAS,CAAER,MAAO,IAAIC,OAC3BS,KAAKP,QAAUQ,OAAOC,aAAY,WAChC,EAAKJ,SAAS,CAAER,MAAO,IAAIC,OACvB,EAAKF,MAAMG,UAEbW,QAAQC,KAAK,EAAKf,MAAMC,MAAMe,cAAcC,OAAO,IAAK,MAEzD,KAEHC,SAASC,iBAAiB,cAAeR,KAAKL,kBAE9CY,SAASC,iBAAiB,QAASR,KAAKD,eAtB5C,gCAyBE,SAAmBU,EAAkBC,GAC/BD,EAAUE,YACRX,KAAKY,MAAMD,WACZD,GACAV,KAAKX,MAAMG,UAGdW,QAAQU,MAAR,uBAA8BJ,EAAUE,UAAxC,eAAwDX,KAAKY,MAAMD,cAhCzE,kCAoCE,WACEV,OAAOa,cAAcd,KAAKP,SAC1Bc,SAASQ,oBAAoB,cAAef,KAAKL,kBACjDY,SAASQ,oBAAoB,QAASf,KAAKD,eAvC/C,oBAmDE,WACE,IAAQY,EAAcX,KAAKY,MAAnBD,UACR,EAA4BX,KAAKX,MAAzBG,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,MAElB,OAAIE,EAEA,sBAAKwB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACG1B,EAAMe,cAAcC,OAAO,IAAK,QAMlC,SAvEX,GAA2BW,IAAMC,eCPjC,SAASC,IACP,IAAMC,EAAQ7B,KAAK8B,MAAMC,WAAWhB,OAAO,GAE3C,MAAM,SAAN,OAAgBc,GAOX,IAAMG,EAAb,4MACElC,MAAe,CACbsB,UAAW,WAFf,EAKEa,YAAc,EALhB,uDAOE,WAA2B,IAAD,OACxBxB,KAAKwB,YAAcvB,OAAOC,aAAY,WACpC,EAAKJ,SAAS,CAAEa,UAAWQ,QAC1B,QAVP,kCAaE,WACElB,OAAOa,cAAcd,KAAKwB,eAd9B,oBAiBE,WACE,IAAQb,EAAcX,KAAKX,MAAnBsB,UAER,OACE,sBAAKK,UAAU,MAAf,UACE,6CAEA,cAAC,EAAD,CAAOL,UAAWA,WAxB1B,GAAyBM,IAAMC,eCX/BO,IAASC,OACP,cAAC,EAAD,IACAnB,SAASoB,eAAe,W","file":"static/js/main.685606c8.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: string,\n}\n\ntype State = {\n  today: Date,\n  hasClock: boolean,\n};\n\nexport class Clock extends React.PureComponent<Props> {\n  state: State = {\n    today: new Date(),\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  addSeconds = 1;\n\n  componentDidMount(): void {\n    this.setState({ today: new Date() });\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      if (this.state.hasClock) {\n        // eslint-disable-next-line\n        console.info(this.state.today.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n\n    document.addEventListener('click', this.clickHandle);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: Readonly<{}>): void {\n    if (prevProps.clockName\n      !== this.props.clockName\n      && prevState\n      && this.state.hasClock\n    ) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.clickHandle);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  clickHandle = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render(): React.ReactNode {\n    const { clockName } = this.props;\n    const { hasClock, today } = this.state;\n\n    if (hasClock) {\n      return (\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {clockName}\n          </strong>\n\n          {' time is '}\n\n          <span className=\"Clock__time\">\n            {today.toUTCString().slice(-12, -4)}\n          </span>\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n};\n\nexport class App extends React.PureComponent {\n  state: State = {\n    clockName: 'Clock-0',\n  };\n\n  timerNameId = 0;\n\n  componentDidMount(): void {\n    this.timerNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerNameId);\n  }\n\n  render(): React.ReactNode {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        <Clock clockName={clockName} />\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}